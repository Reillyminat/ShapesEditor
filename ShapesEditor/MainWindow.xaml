<Window x:Class="ShapesEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:ShapesEditor"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"         
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="TrueToVisibleConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="3"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="2">
            <StackPanel DockPanel.Dock="Top" Margin="4">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                    <Button Content="Save" Command="{Binding SaveCommand}"/>
                    <Button Content="Load" Command="{Binding LoadCommand}" Margin="0 4 0 0"/>
                </StackPanel>
                <Label Content="Select canvas background"/>
                <ComboBox ItemsSource="{Binding BackgroundsNames}" SelectedIndex="0" SelectedItem="{Binding SelectedBackground}"/>
                <Slider Minimum="0.25" Maximum="4" SelectionStart="0" Height="30" IsSnapToTickEnabled="True" TickFrequency="0.25" TickPlacement="BottomRight" Value="{Binding ScaleFactor}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseRightButtonDown">
                            <i:InvokeCommandAction Command="{Binding ResetZoomCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Slider>
                <CheckBox IsThreeState="False" Content="Panning" IsChecked="{Binding IsAllowedPanning}"/>
                <Label Content="Shapes"/>
                <ScrollViewer>
                    <ListBox Name="ShapesList" ItemsSource="{Binding Shapes}" SelectedItem="{Binding SelectedShapeFromList}" SelectionMode="Multiple">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction CommandParameter="{Binding ElementName=ShapesList, Path=SelectedItems}" Command="{Binding ListElementClick}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="4">
                                    <TextBlock Text="{Binding Name}"/>
                                    <ComboBox ItemsSource="{Binding DataContext.BackgroundsNames,
                                                                    RelativeSource={RelativeSource Findancestor,
                                                                    AncestorType={x:Type DockPanel}}}" SelectedItem="{Binding Fill}" SelectedIndex="{Binding SelectedColorIndex}" Margin="4"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
                <TextBlock Text="{Binding PanelX, StringFormat='X={0}'}" VerticalAlignment="Bottom"/>
                <TextBlock Text="{Binding PanelY, StringFormat='Y={0}'}" VerticalAlignment="Bottom"/>
            </StackPanel>
        </DockPanel>
        <Rectangle Grid.Column="1" Fill="Black"/>
        <ScrollViewer Name="CanvasScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                      local:ScrollViewerBinding.VerticalOffset="{Binding ScrollVertical}"
                      local:ScrollViewerBinding.HorizontalOffset="{Binding ScrollHorizontal}">
            <DockPanel Grid.Column="0">
                <DockPanel.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ScaleFactor}" ScaleY="{Binding ScaleFactor}" />
                </DockPanel.LayoutTransform>
                <ItemsControl x:Name="ShapesControl" ItemsSource="{Binding Shapes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas IsItemsHost="true" Background="{Binding SelectedBackground}"  Width="1000" Height="1350">
                                <Canvas.ContextMenu>
                                    <ContextMenu Name="ShapeSelection">
                                        <MenuItem Header="RECTANGLE" >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding ShapeClick}" CommandParameter="Rectangle"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </MenuItem>
                                        <MenuItem Header="STAR">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding ShapeClick}" CommandParameter="Star"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </MenuItem>
                                        <MenuItem Header="TRIANGLE">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding ShapeClick}" CommandParameter="Triangle"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </MenuItem>
                                    </ContextMenu>
                                </Canvas.ContextMenu>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding PreviewMouseLeftButtonUp}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding PreviewMouseLeftButtonDown}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseMove">
                                        <i:InvokeCommandAction Command="{Binding PreviewMouseMove}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding MouseLeave}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <local:MouseBehaviour 
                                        MouseX="{Binding PanelX, Mode=OneWayToSource}"
                                        MouseY="{Binding PanelY, Mode=OneWayToSource}"
                                        />
                                </i:Interaction.Behaviors>
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Grid>
                                    <Polygon Points="{Binding Points}" Fill="{Binding Fill}" Opacity="{Binding Opacity}" Stroke="{Binding Stroke}" StrokeThickness="{Binding StrokeThickness}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.PreviewMouseLeftButtonDownOnShape,
                                                                    RelativeSource={RelativeSource Findancestor,
                                                                    AncestorType={x:Type DockPanel}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                <i:InvokeCommandAction Command="{Binding DataContext.PreviewMouseLeftButtonUpOnShape,
                                                                    RelativeSource={RelativeSource Findancestor,
                                                                    AncestorType={x:Type DockPanel}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="PreviewMouseWheel">
                                                <i:InvokeCommandAction Command="{Binding DataContext.PreviewMouseWheel,
                                                                    RelativeSource={RelativeSource Findancestor,
                                                                    AncestorType={x:Type DockPanel}}}" CommandParameter="{Binding}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Polygon>
                                    <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0},{1}">
                                                <Binding Path="CanvasLeftOffset" />
                                                <Binding Path="CanvasTopOffset" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </Grid>
                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding Path=CanvasLeftOffset, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="Canvas.Top" Value="{Binding Path=CanvasTopOffset, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
            </DockPanel>
        </ScrollViewer>
        <Canvas>
            <Border Visibility="{Binding BorderVisible, Converter={StaticResource TrueToVisibleConverter}}"
                    x:Name="dragSelectionBorder"
                    BorderBrush="Blue"
                    BorderThickness="1"
                    Width="{Binding BorderWidth}"
                    Height="{Binding BorderHeight}"
                    Background="LightBlue"
                    CornerRadius="1"
                    Opacity="0.5"
                    IsHitTestVisible="False">
                <Border.Style>
                    <Style>
                        <Setter
                                Property="Canvas.Left"
                                Value="{Binding BorderLeftOffset}"
                                />
                        <Setter
                                Property="Canvas.Top"
                                Value="{Binding BorderTopOffset}"
                                />
                    </Style>
                </Border.Style>
            </Border>
        </Canvas>
    </Grid>
</Window>
